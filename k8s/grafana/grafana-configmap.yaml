---       #主配置文件
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: grafana
  name: grafana
  namespace: monitoring
data:
  dashboardproviders.yaml: |
    apiVersion: 1
    providers:
    - disableDeletion: false
      editable: true
      folder: ""
      name: default
      options:
        path: /var/lib/grafana/dashboards/default
      orgId: 1
      type: file
  datasources.yaml: |
    apiVersion: 1
    datasources:
    - access: proxy
      isDefault: true
      name: Prometheus
      type: prometheus
      url: http://prometheus-server.monitoring.svc
  download_dashboards.sh: |
    #!/usr/bin/env sh
    set -euf
    mkdir -p /var/lib/grafana/dashboards/default
    curl -sk \
    --connect-timeout 60 \
    --max-time 60 \
    -H "Accept: application/json" \
    -H "Content-Type: application/json;charset=UTF-8" \https://grafana.com/api/dashboards/7424/revisions/5/download| sed 's|\"datasource\":[^,]*|\"datasource\": \"Prometheus\"|g'\
    > /var/lib/grafana/dashboards/default/kong-dash.json
  grafana.ini: |
    [analytics]
    check_for_updates = true
    [grafana_net]
    url = https://grafana.net
    [log]
    mode = console
    [paths]
    data = /var/lib/grafana/data
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning

---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: grafana
  name: grafana-dashboards-default
  namespace: monitoring
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: grafana
  name: grafana-test
  namespace: monitoring
data:
  run.sh: |-
    @test "Test Health" {
      url="http://grafana/api/health"

      code=$(curl -s -o /dev/null -I -w "%{http_code}" $url)
      [ "$code" == "200" ]
    }


